{"version":3,"sources":["styles/GlobalStyles.js","contexts/LottoContext.js","components/common/ErrorMessageBox.js","utils/index.js","constants/prizeTable.js","constants/lotto.js","constants/messages.js","components/PurchaseInput.js","components/Lotto.js","components/LottoBox.js","components/common/Toggle.js","components/LottoDisplay.js","components/WinningNumberInput.js","components/Main.js","components/Modal.js","components/App.js","index.js"],"names":["GlobalStyles","LottoContext","createContext","ErrorMessageBox","css","this","props","text","Component","createDistinctRandomIntegers","from","to","length","fullLength","Error","arr","newArr","i","j","Math","floor","random","shuffle","Array","_","slice","isDivisible","dividend","divisor","countMatchedNumbers","numbers1","numbers2","numbers","numbersSet","Set","size","RANKINGS","RANKING1","RANKING2","RANKING3","RANKING4","RANKING5","NO_PRIZE","PRIZE_TABLE","prize","condition","LOTTO_PRICE","LOTTO_RANGE","ERROR_MESSAGE","INVALID_PRICE_UNIT","DUPLICATED_NUMBER","GUIDE_MESSAGE","lottoCount","earningRate","Form","Input","Button","PurchaseInput","state","isValidInput","formRef","createRef","onSubmit","bind","event","preventDefault","payment","Number","target","elements","value","setState","context","action","createLottos","current","reset","ref","htmlFor","id","name","type","placeholder","min","required","contextType","Lotto","isNumberVisible","lottoNumbers","join","LottoBox","lottos","map","index","key","toString","Switch","Toggle","onToggle","onChange","Header","LottoDisplay","isToggled","checked","InputHeader","InputBox","WinningNumberInput","numbersArray","winningNumbers","$input","bonusNumber","updateLottoResult","openModal","max","MainContainer","Main","ModalContainer","ModalInner","ModalClose","Svg","ResultTable","Modal","modalCloseSvgRef","onMouseDown","currentTarget","closeModal","lottoResult","rankCount","viewBox","d","Object","values","ranking","onClick","clear","Container","initialResult","initialState","isModalOpen","App","result","price","forEach","lotto","lottoNumber","winningNumber","getRanking","totalPrize","reduce","acc","round","calculateEarningRate","styles","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ab06833.chunk.js","sourcesContent":["import { css } from \"@emotion/react\";\n\nconst GlobalStyles = css`\n  * {\n    box-sizing: border-box;\n  }\n\n  html,\n  body {\n    margin: 0;\n  }\n\n  body {\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen,\n      Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\n    font-size: 16px;\n  }\n\n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n\n  ul {\n    list-style: none;\n    padding: 0;\n  }\n\n  input::-webkit-outer-spin-button,\n  input::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n`;\n\nexport default GlobalStyles;\n","import { createContext } from \"react\";\n\nconst LottoContext = createContext([]);\n\nexport default LottoContext;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { css } from \"@emotion/react\";\n\nexport default class ErrorMessageBox extends Component {\n  render() {\n    return (\n      <p\n        css={css`\n          color: red;\n          text-align: center;\n          margin-bottom: 0;\n        `}\n      >\n        {this.props.text}\n      </p>\n    );\n  }\n}\n\nErrorMessageBox.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n","export const shuffle = (arr) => {\n  const newArr = [...arr];\n\n  for (let i = newArr.length; i; i -= 1) {\n    const j = Math.floor(Math.random() * i);\n    [newArr[i - 1], newArr[j]] = [newArr[j], newArr[i - 1]];\n  }\n\n  return newArr;\n};\n\nexport const createDistinctRandomIntegers = (from, to, length) => {\n  const fullLength = to - from + 1;\n\n  if (fullLength < length) {\n    throw new Error(\"Invalid Length\");\n  }\n\n  const baseNumbers = shuffle(\n    Array.from({ length: fullLength }, (_, i) => from + i)\n  );\n\n  return baseNumbers.slice(0, length);\n};\n\nexport const isDivisible = (dividend, divisor) => {\n  if (divisor === 0) {\n    throw new Error(\"Invalid divisor\");\n  }\n\n  return dividend % divisor === 0;\n};\n\nexport const isDistinctNumbers = (numbersArray) => {\n  const numbersSet = new Set(numbersArray);\n\n  return numbersSet.size === numbersArray.length;\n};\n\nexport const countMatchedNumbers = (numbers1, numbers2) => {\n  const numbers = [...numbers1, ...numbers2];\n  const numbersSet = new Set(numbers);\n  return numbers.length - numbersSet.size;\n};\n","export const RANKINGS = {\n  RANKING1: \"RANKING1\",\n  RANKING2: \"RANKING2\",\n  RANKING3: \"RANKING3\",\n  RANKING4: \"RANKING4\",\n  RANKING5: \"RANKING5\",\n  NO_PRIZE: \"NO_PRIZE\",\n};\n\nexport const PRIZE_TABLE = {\n  [RANKINGS.RANKING1]: {\n    prize: 2000000000,\n    condition: \"6개\",\n  },\n  [RANKINGS.RANKING2]: {\n    prize: 30000000,\n    condition: \"5개 + 보너스볼\",\n  },\n  [RANKINGS.RANKING3]: {\n    prize: 1500000,\n    condition: \"5개\",\n  },\n  [RANKINGS.RANKING4]: {\n    prize: 50000,\n    condition: \"4개\",\n  },\n  [RANKINGS.RANKING5]: {\n    prize: 5000,\n    condition: \"3개\",\n  },\n  [RANKINGS.NO_PRIZE]: {\n    prize: 0,\n    condition: \"2개 이하\",\n  },\n};\n","export const LOTTO_PRICE = 1000;\nexport const LOTTO_RANGE = { FROM: 1, TO: 45 };\nexport const LOTTO_LENGTH = 6;\n","import { LOTTO_PRICE } from \"./lotto\";\n\nexport const ERROR_MESSAGE = {\n  INVALID_PRICE_UNIT: `${LOTTO_PRICE}원 단위로 입력해주세요.`,\n  DUPLICATED_NUMBER: \"서로 다른 숫자를 입력해주세요.\",\n};\n\nexport const GUIDE_MESSAGE = {\n  PURCHASE_INPUT: \"구입할 금액을 입력해주세요.\",\n  WINNING_NUMBER: \"지난 주 당첨번호 6개와 보너스 넘버 1개를 입력해주세요.\",\n  LOTTO_COUNT: (lottoCount) => `총 ${lottoCount}개를 구매하였습니다.`,\n  EARNING_RATE: (earningRate) => `당신의 수익률은 총 ${earningRate}% 입니다.`,\n};\n","import React, { Component, createRef } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { css } from \"@emotion/react\";\n\nimport LottoContext from \"../contexts/LottoContext\";\nimport ErrorMessageBox from \"./common/ErrorMessageBox\";\nimport { isDivisible } from \"../utils\";\nimport { LOTTO_PRICE, ERROR_MESSAGE, GUIDE_MESSAGE } from \"../constants\";\n\nconst Form = styled.form`\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: 10px;\n`;\n\nconst Button = styled.button`\n  width: 80px;\n  margin-left: 5px;\n  padding: 10px 0;\n  background-color: #00bcd4;\n  border: none;\n  border-radius: 5px;\n  outline: none;\n  cursor: pointer;\n  &:hover {\n    background-color: #018c9e;\n  }\n`;\n\nexport default class PurchaseInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isValidInput: true,\n    };\n\n    this.formRef = createRef();\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n\n    const payment = Number(event.target.elements[\"purchase-input\"].value);\n\n    this.setState(\n      {\n        isValidInput: isDivisible(payment, LOTTO_PRICE),\n      },\n      () => {\n        if (this.state.isValidInput) {\n          this.context.action.createLottos(payment / LOTTO_PRICE);\n          this.formRef.current.reset();\n        } else {\n          this.context.action.createLottos(0);\n        }\n      }\n    );\n  }\n\n  render() {\n    return (\n      <Form onSubmit={this.onSubmit} ref={this.formRef}>\n        <label htmlFor=\"purchase-input\">{GUIDE_MESSAGE.PURCHASE_INPUT}</label>\n        <div\n          css={css`\n            display: flex;\n            margin-top: 0.5rem;\n          `}\n        >\n          <Input\n            id=\"purchase-input\"\n            name=\"purchase-input\"\n            type=\"number\"\n            placeholder=\"구입 금액\"\n            min={LOTTO_PRICE}\n            required\n          />\n          <Button type=\"submit\">확인</Button>\n        </div>\n        {!this.state.isValidInput && (\n          <ErrorMessageBox text={ERROR_MESSAGE.INVALID_PRICE_UNIT} />\n        )}\n      </Form>\n    );\n  }\n}\n\nPurchaseInput.contextType = LottoContext;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { css } from \"@emotion/react\";\n\nexport default class Lotto extends Component {\n  render() {\n    return (\n      <li\n        css={css`\n          display: flex;\n          align-items: center;\n        `}\n      >\n        <span\n          css={css`\n            margin-right: 10px;\n            font-size: 24px;\n          `}\n        >\n          🎟️\n        </span>\n        {this.props.isNumberVisible && (\n          <span>{this.props.lottoNumbers.join(\", \")}</span>\n        )}\n      </li>\n    );\n  }\n}\n\nLotto.propTypes = {\n  isNumberVisible: PropTypes.bool.isRequired,\n  lottoNumbers: PropTypes.arrayOf(PropTypes.number).isRequired,\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { css } from \"@emotion/react\";\n\nimport LottoContext from \"../contexts/LottoContext\";\n\nimport Lotto from \"./Lotto\";\n\nexport default class LottoBox extends Component {\n  render() {\n    return (\n      <ul\n        css={\n          this.props.isNumberVisible\n            ? {}\n            : css`\n                display: flex;\n                flexwrap: wrap;\n              `\n        }\n      >\n        {this.context.state.lottos.map((lottoNumbers, index) => (\n          <Lotto\n            key={lottoNumbers.toString() + index}\n            lottoNumbers={lottoNumbers}\n            isNumberVisible={this.props.isNumberVisible}\n          />\n        ))}\n      </ul>\n    );\n  }\n}\n\nLottoBox.propTypes = {\n  isNumberVisible: PropTypes.bool.isRequired,\n};\n\nLottoBox.contextType = LottoContext;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"@emotion/styled\";\n\nconst Switch = styled.label`\n  z-index: 0;\n  position: relative;\n\n  & > input {\n    appearance: none;\n    -moz-appearance: none;\n    -webkit-appearance: none;\n    z-index: -1;\n    position: absolute;\n    right: 6px;\n    top: -8px;\n    display: block;\n    margin: 0;\n    border-radius: 50%;\n    width: 40px;\n    height: 40px;\n    outline: none;\n    opacity: 0;\n    transform: scale(1);\n    pointer-events: none;\n    transition: opacity 0.3s 0.1s, transform 0.2s 0.1s;\n  }\n\n  & > span {\n    display: inline-block;\n    width: 100%;\n    cursor: pointer;\n    line-height: 1.7;\n    font-size: 14px;\n  }\n\n  & > span::before {\n    content: \"\";\n    float: right;\n    display: inline-block;\n    margin: 5px 0 5px 10px;\n    border-radius: 7px;\n    width: 36px;\n    height: 14px;\n    background-color: rgba(0, 0, 0, 0.38);\n    vertical-align: top;\n    transition: background-color 0.2s, opacity 0.2s;\n  }\n\n  & > span::after {\n    content: \"\";\n    position: absolute;\n    top: 2px;\n    right: 16px;\n    border-radius: 50%;\n    width: 20px;\n    height: 20px;\n    background-color: white;\n    box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2),\n      0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n    transition: background-color 0.2s, transform 0.2s;\n  }\n\n  & > input:checked {\n    right: -10px;\n    background-color: rgb(0, 188, 212);\n  }\n\n  & > input:checked + span::before {\n    background-color: rgba(0, 188, 212, 0.6);\n  }\n\n  & > input:checked + span::after {\n    background-color: rgb(0, 188, 212);\n    transform: translateX(16px);\n  }\n\n  &:hover > input {\n    opacity: 0.04;\n  }\n\n  & > input:focus {\n    opacity: 0.12;\n  }\n\n  &:hover > input:focus {\n    opacity: 0.16;\n  }\n\n  & > input:active {\n    opacity: 1;\n    transform: scale(0);\n    transition: transform 0s, opacity 0s;\n  }\n\n  & > input:active + span::before {\n    background-color: rgba(0, 188, 212, 0.6);\n  }\n\n  & > input:checked:active + span::before {\n    background-color: rgba(0, 0, 0, 0.38);\n  }\n\n  & > input:disabled {\n    opacity: 0;\n  }\n\n  & > input:disabled + span {\n    color: black;\n    opacity: 0.38;\n    cursor: default;\n  }\n\n  & > input:disabled + span::before {\n    background-color: rgba(0, 0, 0, 0.38);\n  }\n\n  & > input:checked:disabled + span::before {\n    background-color: rgba(0, 188, 212, 0.6);\n  }\n`;\n\nexport default class Toggle extends Component {\n  render() {\n    const { text, onToggle } = this.props;\n\n    return (\n      <Switch htmlFor=\"lotto-numbers-toggle\">\n        <input type=\"checkbox\" id=\"lotto-numbers-toggle\" onChange={onToggle} />\n        <span>{text}</span>\n      </Switch>\n    );\n  }\n}\n\nToggle.propTypes = {\n  text: PropTypes.string.isRequired,\n  onToggle: PropTypes.func.isRequired,\n};\n","import React, { Component } from \"react\";\nimport styled from \"@emotion/styled\";\n\nimport LottoContext from \"../contexts/LottoContext\";\nimport LottoBox from \"./LottoBox\";\nimport Toggle from \"./common/Toggle\";\nimport { GUIDE_MESSAGE } from \"../constants\";\n\nconst Header = styled.h2`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 20px;\n  font-size: 16px;\n  font-weight: normal;\n  align-items: center;\n`;\n\nexport default class LottoDisplay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isToggled: false,\n    };\n\n    this.onToggle = this.onToggle.bind(this);\n  }\n\n  onToggle(event) {\n    this.setState({\n      ...this.state,\n      isToggled: event.target.checked,\n    });\n  }\n\n  render() {\n    const lottoCount = this.context.state.lottos.length;\n\n    return (\n      <div>\n        <Header>\n          <span>{GUIDE_MESSAGE.LOTTO_COUNT(lottoCount)}</span>\n          <Toggle text={\"번호 보기\"} onToggle={this.onToggle} />\n        </Header>\n        <LottoBox isNumberVisible={this.state.isToggled} />\n      </div>\n    );\n  }\n}\n\nLottoDisplay.contextType = LottoContext;\n","import React, { Component } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { css } from \"@emotion/react\";\n\nimport ErrorMessageBox from \"./common/ErrorMessageBox\";\nimport LottoContext from \"../contexts/LottoContext\";\nimport { isDistinctNumbers } from \"../utils\";\nimport { ERROR_MESSAGE, GUIDE_MESSAGE } from \"../constants\";\n\nconst Header = styled.h2`\n  font-size: 16px;\n  font-weight: normal;\n`;\n\nconst InputHeader = styled.h3`\n  text-align: center;\n`;\n\nconst InputBox = styled.input`\n  width: 40px;\n  height: 36px;\n  &:not(:last-child) {\n    margin-right: 7px;\n  }\n  text-align: center;\n`;\n\nconst Button = styled.button`\n  width: 100%;\n  margin-top: 30px;\n  padding: 10px 0;\n  background-color: #00bcd4;\n  border: none;\n  border-radius: 5px;\n  outline: none;\n  cursor: pointer;\n  &:hover {\n    background-color: #018c9e;\n  }\n`;\n\nexport default class WinningNumberInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isValidInput: true,\n    };\n\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n\n    const { elements } = event.target;\n    const winningNumbers = Array.from(elements[\"winning-number\"], ($input) =>\n      Number($input.value)\n    );\n    const bonusNumber = Number(elements[\"bonus-number\"].value);\n\n    this.setState(\n      {\n        ...this.state,\n        isValidInput: isDistinctNumbers([...winningNumbers, bonusNumber]),\n      },\n      () => {\n        if (!this.state.isValidInput) return;\n\n        this.context.action.updateLottoResult(winningNumbers, bonusNumber);\n        this.context.action.openModal();\n      }\n    );\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.onSubmit}>\n        <Header>{GUIDE_MESSAGE.WINNING_NUMBER}</Header>\n        <div\n          css={css`\n            display: flex;\n            justify-content: space-between;\n          `}\n        >\n          <div\n            css={css`\n              display: flex;\n              align-items: center;\n              flex-direction: column;\n            `}\n          >\n            <InputHeader>당첨 번호</InputHeader>\n            <div\n              css={css`\n                display: flex;\n              `}\n            >\n              {Array.from({ length: 6 }, (_, index) => (\n                <InputBox\n                  key={index}\n                  name=\"winning-number\"\n                  type=\"number\"\n                  min=\"1\"\n                  max=\"45\"\n                  required=\"required\"\n                ></InputBox>\n              ))}\n            </div>\n          </div>\n\n          <div\n            css={css`\n              display: flex;\n              align-items: center;\n              flex-direction: column;\n            `}\n          >\n            <InputHeader>보너스 번호</InputHeader>\n            <InputBox\n              name=\"bonus-number\"\n              type=\"number\"\n              min=\"1\"\n              max=\"45\"\n              required=\"required\"\n            ></InputBox>\n          </div>\n        </div>\n        {!this.state.isValidInput && (\n          <ErrorMessageBox text={ERROR_MESSAGE.DUPLICATED_NUMBER} />\n        )}\n        <Button type=\"submit\">확인</Button>\n      </form>\n    );\n  }\n}\n\nWinningNumberInput.contextType = LottoContext;\n","import React, { Component } from \"react\";\nimport styled from \"@emotion/styled\";\n\nimport PurchaseInput from \"./PurchaseInput\";\nimport LottoDisplay from \"./LottoDisplay\";\nimport WinningNumberInput from \"./WinningNumberInput\";\n\nimport LottoContext from \"../contexts/LottoContext\";\n\nconst MainContainer = styled.main`\n  width: 23vw;\n  min-width: 400px;\n`;\n\nexport default class Main extends Component {\n  render() {\n    const lottoCount = this.context.state.lottos.length;\n\n    return (\n      <MainContainer>\n        <PurchaseInput />\n        {lottoCount !== 0 && <LottoDisplay />}\n        {lottoCount !== 0 && <WinningNumberInput />}\n      </MainContainer>\n    );\n  }\n}\n\nMain.contextType = LottoContext;\n","import React, { Component, createRef } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { css } from \"@emotion/react\";\n\nimport LottoContext from \"../contexts/LottoContext\";\nimport { GUIDE_MESSAGE, PRIZE_TABLE, RANKINGS } from \"../constants\";\n\nconst ModalContainer = styled.div`\n  opacity: 1;\n  display: flex;\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background: rgba(0, 0, 0, 0.5);\n  transition: opacity 0.25s ease;\n  z-index: 2;\n`;\n\nconst ModalInner = styled.div`\n  transition: top 0.25s ease;\n  width: 70vw;\n  max-width: 400px;\n  margin: auto;\n  padding: 30px 50px;\n  overflow: auto;\n  background: #fff;\n  border-radius: 5px;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst ModalClose = styled.div`\n  margin: 20px;\n  width: 20px;\n  position: absolute;\n  right: 10px;\n  top: 10px;\n  cursor: pointer;\n`;\n\nconst Svg = styled.svg`\n  display: inline-block;\n  margin: 0;\n  padding: 0;\n  & path {\n    stroke: gray;\n    fill: transparent;\n    stroke-linecap: round;\n    stroke-width: 5;\n  }\n`;\n\nconst ResultTable = styled.table`\n  border-collapse: collapse;\n  width: 100%;\n\n  & td,\n  & th {\n    border-bottom: 1px solid gainsboro;\n    padding: 10px 0;\n  }\n`;\n\nconst Button = styled.button`\n  width: 120px;\n  padding: 10px 0;\n  background-color: #00bcd4;\n  border: none;\n  border-radius: 5px;\n  outline: none;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #018c9e;\n  }\n`;\n\nexport default class Modal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.modalCloseSvgRef = createRef();\n    this.onMouseDown = this.onMouseDown.bind(this);\n  }\n\n  onMouseDown(event) {\n    if (\n      event.currentTarget === event.target ||\n      event.target === this.modalCloseSvgRef.current\n    ) {\n      this.context.action.closeModal();\n    }\n  }\n\n  render() {\n    const { rankCount, earningRate } = this.context.state.lottoResult;\n\n    return (\n      <ModalContainer onMouseDown={this.onMouseDown}>\n        <ModalInner>\n          <ModalClose>\n            <Svg viewBox=\"0 0 40 40\" ref={this.modalCloseSvgRef}>\n              <path d=\"M 10,10 L 30,30 M 30,10 L 10,30\" />\n            </Svg>\n          </ModalClose>\n\n          <h2>🏆 당첨 통계 🏆</h2>\n\n          <ResultTable>\n            <thead>\n              <tr\n                css={css`\n                  text-align: center;\n                `}\n              >\n                <th>일치 갯수</th>\n                <th>당첨금</th>\n                <th>당첨 갯수</th>\n              </tr>\n            </thead>\n            <tbody>\n              {Object.values(RANKINGS).map((ranking) => (\n                <tr\n                  css={css`\n                    text-align: center;\n                  `}\n                  key={ranking}\n                >\n                  <td>{PRIZE_TABLE[ranking].condition}</td>\n                  <td>{PRIZE_TABLE[ranking].prize}원</td>\n                  <td>{rankCount[ranking]}개</td>\n                </tr>\n              ))}\n            </tbody>\n          </ResultTable>\n          <p\n            css={css`\n              font-weight: bold;\n            `}\n          >\n            {GUIDE_MESSAGE.EARNING_RATE(earningRate)}\n          </p>\n          <Button type=\"button\" onClick={this.context.action.clear}>\n            다시 시작하기\n          </Button>\n        </ModalInner>\n      </ModalContainer>\n    );\n  }\n}\n\nModal.contextType = LottoContext;\n","import React, { Component } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Global } from \"@emotion/react\";\n\nimport GlobalStyles from \"../styles/GlobalStyles\";\nimport LottoContext from \"../contexts/LottoContext\";\nimport Main from \"./Main\";\nimport Modal from \"./Modal\";\n\nimport {\n  PRIZE_TABLE,\n  RANKINGS,\n  LOTTO_PRICE,\n  LOTTO_RANGE,\n  LOTTO_LENGTH,\n} from \"../constants\";\n\nimport { countMatchedNumbers, createDistinctRandomIntegers } from \"../utils\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst initialResult = {\n  rankCount: {\n    [RANKINGS.RANKING1]: 0,\n    [RANKINGS.RANKING2]: 0,\n    [RANKINGS.RANKING3]: 0,\n    [RANKINGS.RANKING4]: 0,\n    [RANKINGS.RANKING5]: 0,\n    [RANKINGS.NO_PRIZE]: 0,\n  },\n  earningRate: 0,\n};\n\nconst initialState = {\n  lottos: [],\n  isModalOpen: false,\n  lottoResult: initialResult,\n};\n\nconst getRanking = (lottoNumber, winningNumber, bonusNumber) => {\n  const numOfMatched = countMatchedNumbers(lottoNumber, winningNumber);\n\n  switch (numOfMatched) {\n    case 3:\n      return RANKINGS.RANKING5;\n    case 4:\n      return RANKINGS.RANKING4;\n    case 5:\n      if (countMatchedNumbers(lottoNumber, [bonusNumber])) {\n        return RANKINGS.RANKING2;\n      }\n      return RANKINGS.RANKING3;\n    case 6:\n      return RANKINGS.RANKING1;\n    default:\n      return RANKINGS.NO_PRIZE;\n  }\n};\n\nconst calculateEarningRate = (rankCount, price) => {\n  const totalPrize = Object.values(RANKINGS).reduce((acc, ranking) => {\n    return acc + rankCount[ranking] * PRIZE_TABLE[ranking].prize;\n  }, 0);\n\n  return Math.round(((totalPrize - price) / price) * 100);\n};\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n    this.action = {\n      createLottos: (lottoCount) => {\n        const lottos = Array.from({ length: lottoCount }, () =>\n          createDistinctRandomIntegers(\n            LOTTO_RANGE.FROM,\n            LOTTO_RANGE.TO,\n            LOTTO_LENGTH\n          )\n        );\n\n        this.setState({ lottos });\n      },\n\n      updateLottoResult: (winningNumbers, bonusNumber) => {\n        const result = {\n          ...initialResult,\n          rankCount: { ...initialResult.rankCount },\n        };\n\n        const price = this.state.lottos.length * LOTTO_PRICE;\n\n        this.state.lottos.forEach((lotto) => {\n          const ranking = getRanking(lotto, winningNumbers, bonusNumber);\n          result.rankCount[ranking] += 1;\n        });\n\n        result.earningRate = calculateEarningRate(result.rankCount, price);\n\n        this.setState({ lottoResult: result });\n      },\n\n      openModal: () => {\n        this.setState({ isModalOpen: true });\n      },\n\n      closeModal: () => {\n        this.setState({ isModalOpen: false });\n      },\n\n      clear: () => {\n        this.setState(initialState);\n      },\n    };\n  }\n\n  render() {\n    return (\n      <>\n        <Global styles={GlobalStyles} />\n        <LottoContext.Provider\n          value={{ state: this.state, action: this.action }}\n        >\n          <Container>\n            <h1>🎱 행운의 로또</h1>\n            <Main />\n            {this.state.isModalOpen && <Modal />}\n          </Container>\n        </LottoContext.Provider>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}