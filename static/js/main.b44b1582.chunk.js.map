{"version":3,"sources":["components/App/style.js","@shared/utils/common.js","@shared/constants/prizeTable.js","@shared/constants/lotto.js","components/App/utils.js","components/common/Toggle/style.js","components/common/Toggle/index.js","components/LottoBox/style.js","components/Lotto/style.js","components/Lotto/index.js","components/LottoBox/index.js","components/LottoContainer/style.js","@shared/constants/messages.js","components/LottoContainer/index.js","components/PurchaseInput/style.js","components/common/ErrorMessageBox/style.js","components/common/ErrorMessageBox/index.js","components/PurchaseInput/index.js","components/WinningNumber/style.js","components/WinningNumber/index.js","components/Main/style.js","components/Main/index.js","components/ResultModal/style.js","components/common/Modal/style.js","components/common/Modal/index.js","components/common/BlodText/style.js","components/common/BlodText/index.js","components/ResultModal/index.js","components/App/index.js","index.js"],"names":["GlobalStyles","Container","deepCopyJSONObject","obj","JSON","parse","stringify","createDistinctRandomIntegers","from","to","length","fullLength","Error","arr","newArr","i","j","Math","floor","random","shuffle","Array","_","slice","isDivisible","dividend","divisor","countMatchedNumbers","numbers1","numbers2","numbers","numbersSet","Set","size","RANKINGS","RANKING1","RANKING2","RANKING3","RANKING4","RANKING5","NO_PRIZE","PRIZE_TABLE","prize","condition","LOTTO_PRICE","LOTTO_RANGE","INITIAL_RESULT","rankCount","earningRate","createLottoResult","initResult","lottos","winningNumbers","bonusNumber","result","payment","forEach","lotto","ranking","lottoNumber","winningNumber","getRanking","price","totalPrize","Object","values","reduce","acc","round","calculateEarningRate","Switch","Input","Text","Toggle","this","props","text","onToggle","htmlFor","type","id","onChange","Component","TicketList","isNumberVisible","List","TicketIcon","Lotto","lottoNumbers","join","LottoBox","map","index","key","toString","Header","ERROR_MESSAGE","INVALID_PRICE_UNIT","DUPLICATED_NUMBER","GUIDE_MESSAGE","lottoCount","LottoContainer","state","isToggled","bind","event","setState","target","checked","Form","Button","ErrorMessageBox","PurchaseInput","isValidInput","formRef","createRef","onSubmit","preventDefault","Number","elements","value","updateLottos","current","reset","ref","name","placeholder","min","required","NumberContainer","InputHeader","InputBoxes","InputBox","WinningNumberInput","numbersArray","$input","updateLottoResult","openModal","max","MainContainer","Main","action","ResultTable","TableRow","ModalContainer","ModalInner","ModalClose","Svg","Modal","modalCloseSvgRef","onMouseDown","currentTarget","closeModal","viewBox","d","children","BoldText","ResultModal","lottoResult","clear","onClick","App","initialState","isModalOpen","createLottos","styles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b44b1582.chunk.js","sourcesContent":["import { css } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\n\nexport const GlobalStyles = css`\n  * {\n    box-sizing: border-box;\n  }\n\n  html,\n  body {\n    margin: 0;\n  }\n\n  body {\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen,\n      Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\n    font-size: 16px;\n  }\n\n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n\n  ul {\n    list-style: none;\n    padding: 0;\n  }\n\n  input::-webkit-outer-spin-button,\n  input::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","export const shuffle = (arr) => {\n  const newArr = [...arr];\n\n  for (let i = newArr.length; i; i -= 1) {\n    const j = Math.floor(Math.random() * i);\n    [newArr[i - 1], newArr[j]] = [newArr[j], newArr[i - 1]];\n  }\n\n  return newArr;\n};\n\nexport const deepCopyJSONObject = (obj) => JSON.parse(JSON.stringify(obj));\n\nexport const createDistinctRandomIntegers = (from, to, length) => {\n  const fullLength = to - from + 1;\n\n  if (fullLength < length) {\n    throw new Error(\"Invalid Length\");\n  }\n\n  const baseNumbers = shuffle(\n    Array.from({ length: fullLength }, (_, i) => from + i)\n  );\n\n  return baseNumbers.slice(0, length);\n};\n\nexport const isDivisible = (dividend, divisor) => {\n  if (divisor === 0) {\n    throw new Error(\"Invalid divisor\");\n  }\n\n  return dividend % divisor === 0;\n};\n\nexport const isDistinctNumbers = (numbersArray) => {\n  const numbersSet = new Set(numbersArray);\n\n  return numbersSet.size === numbersArray.length;\n};\n\nexport const countMatchedNumbers = (numbers1, numbers2) => {\n  const numbers = [...numbers1, ...numbers2];\n  const numbersSet = new Set(numbers);\n  return numbers.length - numbersSet.size;\n};\n","export const RANKINGS = {\n  RANKING1: \"RANKING1\",\n  RANKING2: \"RANKING2\",\n  RANKING3: \"RANKING3\",\n  RANKING4: \"RANKING4\",\n  RANKING5: \"RANKING5\",\n  NO_PRIZE: \"NO_PRIZE\",\n};\n\nexport const PRIZE_TABLE = {\n  [RANKINGS.RANKING1]: {\n    prize: 2000000000,\n    condition: \"6개\",\n  },\n  [RANKINGS.RANKING2]: {\n    prize: 30000000,\n    condition: \"5개 + 보너스볼\",\n  },\n  [RANKINGS.RANKING3]: {\n    prize: 1500000,\n    condition: \"5개\",\n  },\n  [RANKINGS.RANKING4]: {\n    prize: 50000,\n    condition: \"4개\",\n  },\n  [RANKINGS.RANKING5]: {\n    prize: 5000,\n    condition: \"3개\",\n  },\n  [RANKINGS.NO_PRIZE]: {\n    prize: 0,\n    condition: \"2개 이하\",\n  },\n};\n","import { RANKINGS } from \"./prizeTable\";\n\nexport const LOTTO_PRICE = 1000;\nexport const LOTTO_RANGE = { FROM: 1, TO: 45 };\nexport const LOTTO_LENGTH = 6;\n\nexport const INITIAL_RESULT = {\n  rankCount: {\n    [RANKINGS.RANKING1]: 0,\n    [RANKINGS.RANKING2]: 0,\n    [RANKINGS.RANKING3]: 0,\n    [RANKINGS.RANKING4]: 0,\n    [RANKINGS.RANKING5]: 0,\n    [RANKINGS.NO_PRIZE]: 0,\n  },\n  earningRate: 0,\n};\n","import {\n  LOTTO_LENGTH,\n  LOTTO_PRICE,\n  LOTTO_RANGE,\n} from \"../../@shared/constants/lotto\";\nimport { PRIZE_TABLE, RANKINGS } from \"../../@shared/constants/prizeTable\";\nimport {\n  countMatchedNumbers,\n  createDistinctRandomIntegers,\n  deepCopyJSONObject,\n} from \"../../@shared/utils/common\";\n\nexport const getRanking = (lottoNumber, winningNumber, bonusNumber) => {\n  const numOfMatched = countMatchedNumbers(lottoNumber, winningNumber);\n\n  switch (numOfMatched) {\n    case 3:\n      return RANKINGS.RANKING5;\n    case 4:\n      return RANKINGS.RANKING4;\n    case 5:\n      if (countMatchedNumbers(lottoNumber, [bonusNumber])) {\n        return RANKINGS.RANKING2;\n      }\n      return RANKINGS.RANKING3;\n    case 6:\n      return RANKINGS.RANKING1;\n    default:\n      return RANKINGS.NO_PRIZE;\n  }\n};\n\nexport const calculateEarningRate = (rankCount, price) => {\n  const totalPrize = Object.values(RANKINGS).reduce((acc, ranking) => {\n    return acc + rankCount[ranking] * PRIZE_TABLE[ranking].prize;\n  }, 0);\n\n  return Math.round(((totalPrize - price) / price) * 100);\n};\n\nexport const createLottoResult = (\n  initResult,\n  lottos,\n  winningNumbers,\n  bonusNumber\n) => {\n  const result = deepCopyJSONObject(initResult);\n  const payment = lottos.length * LOTTO_PRICE;\n  lottos.forEach((lotto) => {\n    const ranking = getRanking(lotto, winningNumbers, bonusNumber);\n    result.rankCount[ranking] += 1;\n  });\n  result.earningRate = calculateEarningRate(result.rankCount, payment);\n\n  return result;\n};\n\nexport const createLottos = (lottoCount) => {\n  const lottos = Array.from({ length: lottoCount }, () =>\n    createDistinctRandomIntegers(LOTTO_RANGE.FROM, LOTTO_RANGE.TO, LOTTO_LENGTH)\n  );\n  return lottos;\n};\n","import styled from \"@emotion/styled\";\n\nexport const Switch = styled.label`\n  z-index: 0;\n  position: relative;\n\n  & > input:checked + span::before {\n    background-color: rgba(0, 188, 212, 0.6);\n  }\n\n  & > input:checked + span::after {\n    background-color: rgb(0, 188, 212);\n    transform: translateX(16px);\n  }\n\n  &:hover > input {\n    opacity: 0.04;\n  }\n\n  &:hover > input:focus {\n    opacity: 0.16;\n  }\n\n  & > input:active + span::before {\n    background-color: rgba(0, 188, 212, 0.6);\n  }\n\n  & > input:checked:active + span::before {\n    background-color: rgba(0, 0, 0, 0.38);\n  }\n\n  & > input:disabled + span {\n    color: black;\n    opacity: 0.38;\n    cursor: default;\n  }\n\n  & > input:disabled + span::before {\n    background-color: rgba(0, 0, 0, 0.38);\n  }\n\n  & > input:checked:disabled + span::before {\n    background-color: rgba(0, 188, 212, 0.6);\n  }\n`;\n\nexport const Input = styled.input`\n  appearance: none;\n  -moz-appearance: none;\n  -webkit-appearance: none;\n  z-index: -1;\n  position: absolute;\n  right: 6px;\n  top: -8px;\n  display: block;\n  margin: 0;\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  outline: none;\n  opacity: 0;\n  transform: scale(1);\n  pointer-events: none;\n  transition: opacity 0.3s 0.1s, transform 0.2s 0.1s;\n\n  &:focus {\n    opacity: 0.12;\n  }\n  &:disabled {\n    opacity: 0;\n  }\n  &:checked {\n    right: -10px;\n    background-color: rgb(0, 188, 212);\n  }\n  &:active {\n    opacity: 1;\n    transform: scale(0);\n    transition: transform 0s, opacity 0s;\n  }\n`;\n\nexport const Text = styled.span`\n  display: inline-block;\n  width: 100%;\n  cursor: pointer;\n  line-height: 1.7;\n  font-size: 14px;\n\n  &::before {\n    content: \"\";\n    float: right;\n    display: inline-block;\n    margin: 5px 0 5px 10px;\n    border-radius: 7px;\n    width: 36px;\n    height: 14px;\n    background-color: rgba(0, 0, 0, 0.38);\n    vertical-align: top;\n    transition: background-color 0.2s, opacity 0.2s;\n  }\n\n  &::after {\n    content: \"\";\n    position: absolute;\n    top: 2px;\n    right: 16px;\n    border-radius: 50%;\n    width: 20px;\n    height: 20px;\n    background-color: white;\n    box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2),\n      0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n    transition: background-color 0.2s, transform 0.2s;\n  }\n`;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Input, Switch, Text } from \"./style\";\n\nexport default class Toggle extends Component {\n  render() {\n    const { text, onToggle } = this.props;\n\n    return (\n      <Switch htmlFor=\"lotto-numbers-toggle\">\n        <Input type=\"checkbox\" id=\"lotto-numbers-toggle\" onChange={onToggle} />\n        <Text>{text}</Text>\n      </Switch>\n    );\n  }\n}\n\nToggle.propTypes = {\n  text: PropTypes.string.isRequired,\n  onToggle: PropTypes.func.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\n// eslint-disable-next-line import/prefer-default-export\nexport const TicketList = styled.ul`\n  ${({ isNumberVisible }) =>\n    !isNumberVisible ? \"display: flex; flex-wrap: wrap;\" : \"\"}\n`;\n","import styled from \"@emotion/styled\";\n\nexport const List = styled.li`\n  display: flex;\n  align-items: center;\n`;\n\nexport const TicketIcon = styled.span`\n  margin-right: 10px;\n  font-size: 24px;\n`;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { List, TicketIcon } from \"./style\";\n\nexport default class Lotto extends Component {\n  render() {\n    const { isNumberVisible, lottoNumbers } = this.props;\n    return (\n      <List>\n        <TicketIcon>🎟️</TicketIcon>\n        {isNumberVisible && <span>{lottoNumbers.join(\", \")}</span>}\n      </List>\n    );\n  }\n}\n\nLotto.propTypes = {\n  isNumberVisible: PropTypes.bool.isRequired,\n  lottoNumbers: PropTypes.arrayOf(PropTypes.number).isRequired,\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { TicketList } from \"./style\";\nimport Lotto from \"../Lotto\";\n\nexport default class LottoBox extends Component {\n  render() {\n    const { isNumberVisible, lottos } = this.props;\n\n    return (\n      <TicketList isNumberVisible={isNumberVisible}>\n        {lottos.map((lottoNumbers, index) => (\n          <Lotto\n            key={lottoNumbers.toString() + index}\n            lottoNumbers={lottoNumbers}\n            isNumberVisible={isNumberVisible}\n          />\n        ))}\n      </TicketList>\n    );\n  }\n}\n\nLottoBox.propTypes = {\n  isNumberVisible: PropTypes.bool.isRequired,\n  lottos: PropTypes.array.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\n// eslint-disable-next-line import/prefer-default-export\nexport const Header = styled.h2`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 20px;\n  font-size: 16px;\n  font-weight: normal;\n  align-items: center;\n`;\n","import { LOTTO_PRICE } from \"./lotto\";\n\nexport const ERROR_MESSAGE = {\n  INVALID_PRICE_UNIT: `${LOTTO_PRICE}원 단위로 입력해주세요.`,\n  DUPLICATED_NUMBER: \"서로 다른 숫자를 입력해주세요.\",\n};\n\nexport const GUIDE_MESSAGE = {\n  PURCHASE_INPUT: \"구입할 금액을 입력해주세요.\",\n  WINNING_NUMBER: \"지난 주 당첨번호 6개와 보너스 넘버 1개를 입력해주세요.\",\n  LOTTO_COUNT: (lottoCount) => `총 ${lottoCount}개를 구매하였습니다.`,\n  EARNING_RATE: (earningRate) => `당신의 수익률은 총 ${earningRate}% 입니다.`,\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Toggle from \"../common/Toggle\";\nimport LottoBox from \"../LottoBox\";\nimport { Header } from \"./style\";\nimport { GUIDE_MESSAGE } from \"../../@shared/constants/messages\";\n\nexport default class LottoContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isToggled: false,\n    };\n\n    this.onToggle = this.onToggle.bind(this);\n  }\n\n  onToggle(event) {\n    this.setState({\n      ...this.state,\n      isToggled: event.target.checked,\n    });\n  }\n\n  render() {\n    const { lottos } = this.props;\n    const lottoCount = lottos.length;\n    const { isToggled } = this.state;\n\n    return (\n      <div>\n        <Header>\n          <span>{GUIDE_MESSAGE.LOTTO_COUNT(lottoCount)}</span>\n          <Toggle text={\"번호 보기\"} onToggle={this.onToggle} />\n        </Header>\n        <LottoBox isNumberVisible={isToggled} lottos={lottos} />\n      </div>\n    );\n  }\n}\n\nLottoContainer.propTypes = {\n  lottos: PropTypes.array.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  display: flex;\n  margin-top: 0.5rem;\n`;\n\nexport const Form = styled.form`\n  width: 100%;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 10px;\n`;\n\nexport const Button = styled.button`\n  width: 80px;\n  margin-left: 5px;\n  padding: 10px 0;\n  background-color: #00bcd4;\n  border: none;\n  border-radius: 5px;\n  outline: none;\n  cursor: pointer;\n  &:hover {\n    background-color: #018c9e;\n  }\n`;\n","import styled from \"@emotion/styled\";\n\n// eslint-disable-next-line import/prefer-default-export\nexport const Text = styled.p`\n  color: red;\n  text-align: center;\n  margin-bottom: 0;\n`;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Text } from \"./style\";\n\nexport default class ErrorMessageBox extends Component {\n  render() {\n    return <Text>{this.props.text}</Text>;\n  }\n}\n\nErrorMessageBox.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n","import React, { Component, createRef } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { LOTTO_PRICE } from \"../../@shared/constants/lotto\";\nimport { ERROR_MESSAGE, GUIDE_MESSAGE } from \"../../@shared/constants/messages\";\nimport { isDivisible } from \"../../@shared/utils/common\";\nimport { Button, Container, Form, Input } from \"./style\";\nimport ErrorMessageBox from \"../common/ErrorMessageBox\";\n\nexport default class PurchaseInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isValidInput: true,\n    };\n\n    this.formRef = createRef();\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n\n    const payment = Number(event.target.elements[\"purchase-input\"].value);\n\n    this.setState(\n      {\n        isValidInput: isDivisible(payment, LOTTO_PRICE),\n      },\n      () => {\n        const { updateLottos } = this.props;\n        if (this.state.isValidInput) {\n          updateLottos(payment / LOTTO_PRICE);\n          this.formRef.current.reset();\n        } else {\n          updateLottos(0);\n        }\n      }\n    );\n  }\n\n  render() {\n    const { isValidInput } = this.state;\n    return (\n      <Form onSubmit={this.onSubmit} ref={this.formRef}>\n        <label htmlFor=\"purchase-input\">{GUIDE_MESSAGE.PURCHASE_INPUT}</label>\n        <Container>\n          <Input\n            id=\"purchase-input\"\n            name=\"purchase-input\"\n            type=\"number\"\n            placeholder=\"구입 금액\"\n            min={LOTTO_PRICE}\n            required\n          />\n          <Button type=\"submit\">확인</Button>\n        </Container>\n        {!isValidInput && (\n          <ErrorMessageBox text={ERROR_MESSAGE.INVALID_PRICE_UNIT} />\n        )}\n      </Form>\n    );\n  }\n}\n\nPurchaseInput.propTypes = {\n  updateLottos: PropTypes.func.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Header = styled.h2`\n  font-size: 16px;\n  font-weight: normal;\n`;\n\nexport const NumberContainer = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport const InputHeader = styled.h3`\n  text-align: center;\n`;\n\nexport const InputBoxes = styled.div`\n  display: flex;\n`;\n\nexport const InputBox = styled.input`\n  width: 40px;\n  height: 36px;\n  &:not(:last-child) {\n    margin-right: 7px;\n  }\n  text-align: center;\n`;\n\nexport const Button = styled.button`\n  width: 100%;\n  margin-top: 30px;\n  padding: 10px 0;\n  background-color: #00bcd4;\n  border: none;\n  border-radius: 5px;\n  outline: none;\n  cursor: pointer;\n  &:hover {\n    background-color: #018c9e;\n  }\n`;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { ERROR_MESSAGE, GUIDE_MESSAGE } from \"../../@shared/constants/messages\";\nimport { isDistinctNumbers } from \"../../@shared/utils/common\";\nimport ErrorMessageBox from \"../common/ErrorMessageBox\";\nimport {\n  Button,\n  Container,\n  Header,\n  InputBox,\n  InputBoxes,\n  InputHeader,\n  NumberContainer,\n} from \"./style\";\n\nexport default class WinningNumberInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isValidInput: true,\n    };\n\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n\n    const { elements } = event.target;\n    const winningNumbers = Array.from(elements[\"winning-number\"], ($input) =>\n      Number($input.value)\n    );\n    const bonusNumber = Number(elements[\"bonus-number\"].value);\n\n    this.setState(\n      {\n        isValidInput: isDistinctNumbers([...winningNumbers, bonusNumber]),\n      },\n      () => {\n        if (!this.state.isValidInput) return;\n\n        const { updateLottoResult, openModal } = this.props;\n\n        updateLottoResult(winningNumbers, bonusNumber);\n        openModal();\n      }\n    );\n  }\n\n  render() {\n    const { isValidInput } = this.state;\n    return (\n      <form onSubmit={this.onSubmit}>\n        <Header>{GUIDE_MESSAGE.WINNING_NUMBER}</Header>\n        <Container>\n          <NumberContainer>\n            <InputHeader>당첨 번호</InputHeader>\n            <InputBoxes>\n              {Array.from({ length: 6 }, (_, index) => (\n                <InputBox\n                  key={index}\n                  name=\"winning-number\"\n                  type=\"number\"\n                  min=\"1\"\n                  max=\"45\"\n                  required=\"required\"\n                ></InputBox>\n              ))}\n            </InputBoxes>\n          </NumberContainer>\n\n          <NumberContainer>\n            <InputHeader>보너스 번호</InputHeader>\n            <InputBox\n              name=\"bonus-number\"\n              type=\"number\"\n              min=\"1\"\n              max=\"45\"\n              required=\"required\"\n            ></InputBox>\n          </NumberContainer>\n        </Container>\n        {!isValidInput && (\n          <ErrorMessageBox text={ERROR_MESSAGE.DUPLICATED_NUMBER} />\n        )}\n        <Button type=\"submit\">확인</Button>\n      </form>\n    );\n  }\n}\n\nWinningNumberInput.propTypes = {\n  updateLottoResult: PropTypes.func.isRequired,\n  openModal: PropTypes.func.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\n// eslint-disable-next-line import/prefer-default-export\nexport const MainContainer = styled.main`\n  width: 23vw;\n  min-width: 400px;\n`;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport LottoContainer from \"../LottoContainer\";\nimport PurchaseInput from \"../PurchaseInput\";\nimport WinningNumberInput from \"../WinningNumber\";\nimport { MainContainer } from \"./style\";\n\nexport default class Main extends Component {\n  render() {\n    const {\n      state: { lottos },\n      action: { updateLottos, updateLottoResult, openModal },\n    } = this.props;\n    const lottoCount = lottos.length;\n\n    return (\n      <MainContainer>\n        <PurchaseInput updateLottos={updateLottos} />\n        {lottoCount !== 0 && <LottoContainer lottos={lottos} />}\n        {lottoCount !== 0 && (\n          <WinningNumberInput\n            updateLottoResult={updateLottoResult}\n            openModal={openModal}\n          />\n        )}\n      </MainContainer>\n    );\n  }\n}\n\nMain.propTypes = {\n  state: PropTypes.object.isRequired,\n  action: PropTypes.object.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const ResultTable = styled.table`\n  border-collapse: collapse;\n  width: 100%;\n\n  & td,\n  & th {\n    border-bottom: 1px solid gainsboro;\n    padding: 10px 0;\n  }\n`;\n\nexport const Button = styled.button`\n  width: 120px;\n  padding: 10px 0;\n  background-color: #00bcd4;\n  border: none;\n  border-radius: 5px;\n  outline: none;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #018c9e;\n  }\n`;\n\nexport const TableRow = styled.tr`\n  text-align: center;\n`;\n","import styled from \"@emotion/styled\";\n\nexport const ModalContainer = styled.div`\n  opacity: 1;\n  display: flex;\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background: rgba(0, 0, 0, 0.5);\n  transition: opacity 0.25s ease;\n  z-index: 2;\n`;\n\nexport const ModalInner = styled.div`\n  transition: top 0.25s ease;\n  width: 70vw;\n  max-width: 400px;\n  margin: auto;\n  padding: 30px 50px;\n  overflow: auto;\n  background: #fff;\n  border-radius: 5px;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const ModalClose = styled.div`\n  margin: 20px;\n  width: 20px;\n  position: absolute;\n  right: 10px;\n  top: 10px;\n  cursor: pointer;\n`;\n\nexport const Svg = styled.svg`\n  display: inline-block;\n  margin: 0;\n  padding: 0;\n  & path {\n    stroke: gray;\n    fill: transparent;\n    stroke-linecap: round;\n    stroke-width: 5;\n  }\n`;\n","import React, { Component, createRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ModalClose, ModalContainer, ModalInner, Svg } from \"./style\";\n\nexport default class Modal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.modalCloseSvgRef = createRef();\n    this.onMouseDown = this.onMouseDown.bind(this);\n  }\n\n  onMouseDown(event) {\n    if (\n      event.currentTarget === event.target ||\n      event.target === this.modalCloseSvgRef.current\n    ) {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    return (\n      <ModalContainer onMouseDown={this.onMouseDown}>\n        <ModalInner>\n          <ModalClose>\n            <Svg viewBox=\"0 0 40 40\" ref={this.modalCloseSvgRef}>\n              <path d=\"M 10,10 L 30,30 M 30,10 L 10,30\" />\n            </Svg>\n          </ModalClose>\n          {this.props.children}\n        </ModalInner>\n      </ModalContainer>\n    );\n  }\n}\n\nModal.propTypes = {\n  closeModal: PropTypes.func,\n  children: PropTypes.any.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\n// eslint-disable-next-line import/prefer-default-export\nexport const Text = styled.p`\n  font-weight: bold;\n`;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Text } from \"./style\";\n\nexport default class BoldText extends Component {\n  render() {\n    return <Text>{this.props.text}</Text>;\n  }\n}\n\nBoldText.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { GUIDE_MESSAGE } from \"../../@shared/constants/messages\";\nimport { PRIZE_TABLE, RANKINGS } from \"../../@shared/constants/prizeTable\";\nimport { Button, ResultTable, TableRow } from \"./style\";\nimport Modal from \"../common/Modal\";\nimport BoldText from \"../common/BlodText\";\n\nexport default class ResultModal extends Component {\n  render() {\n    const {\n      state: {\n        lottoResult: { rankCount, earningRate },\n      },\n      action: { clear, closeModal },\n    } = this.props;\n\n    return (\n      <Modal closeModal={closeModal}>\n        <h2>🏆 당첨 통계 🏆</h2>\n        <ResultTable>\n          <thead>\n            <TableRow>\n              <th>일치 갯수</th>\n              <th>당첨금</th>\n              <th>당첨 갯수</th>\n            </TableRow>\n          </thead>\n          <tbody>\n            {Object.values(RANKINGS).map((ranking, index) => (\n              <TableRow key={`${index}-ranking`}>\n                <td>{PRIZE_TABLE[ranking].condition}</td>\n                <td>{PRIZE_TABLE[ranking].prize}원</td>\n                <td>{rankCount[ranking]}개</td>\n              </TableRow>\n            ))}\n          </tbody>\n        </ResultTable>\n        <BoldText text={GUIDE_MESSAGE.EARNING_RATE(earningRate)}></BoldText>\n        <Button type=\"button\" onClick={clear}>\n          다시 시작하기\n        </Button>\n      </Modal>\n    );\n  }\n}\n\nResultModal.propTypes = {\n  state: PropTypes.object.isRequired,\n  action: PropTypes.object.isRequired,\n};\n","import React, { Component } from \"react\";\nimport { Global } from \"@emotion/react\";\n\nimport { Container, GlobalStyles } from \"./style\";\nimport { deepCopyJSONObject } from \"../../@shared/utils/common\";\nimport { INITIAL_RESULT } from \"../../@shared/constants/lotto\";\n\nimport { createLottoResult, createLottos } from \"./utils\";\nimport Main from \"../Main\";\nimport ResultModal from \"../ResultModal\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.initialState = {\n      lottos: [],\n      isModalOpen: false,\n      lottoResult: deepCopyJSONObject(INITIAL_RESULT),\n    };\n\n    this.state = deepCopyJSONObject(this.initialState);\n    this.action = {\n      updateLottos: (lottoCount) => {\n        const lottos = createLottos(lottoCount);\n\n        this.setState({ lottos });\n      },\n\n      updateLottoResult: (winningNumbers, bonusNumber) => {\n        const result = createLottoResult(\n          INITIAL_RESULT,\n          this.state.lottos,\n          winningNumbers,\n          bonusNumber\n        );\n\n        this.setState({ lottoResult: result });\n      },\n\n      openModal: () => {\n        this.setState({ isModalOpen: true });\n      },\n\n      closeModal: () => {\n        this.setState({ isModalOpen: false });\n      },\n\n      clear: () => {\n        this.setState(this.initialState);\n      },\n    };\n  }\n\n  render() {\n    return (\n      <>\n        <Global styles={GlobalStyles} />\n        <Container>\n          <h1>🎱 행운의 로또</h1>\n          <Main state={this.state} action={this.action} />\n          {this.state.isModalOpen && (\n            <ResultModal state={this.state} action={this.action} />\n          )}\n        </Container>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}