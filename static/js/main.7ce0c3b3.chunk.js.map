{"version":3,"sources":["components/App/style.js","@shared/utils/common.js","@shared/constants/prizeTable.js","@shared/constants/lotto.js","components/App/service.js","components/common/Toggle/style.js","components/common/Toggle/index.js","components/LottoBox/style.js","components/Lotto/style.js","components/Lotto/index.js","components/LottoBox/index.js","components/LottoContainer/style.js","@shared/constants/messages.js","components/LottoContainer/index.js","components/PurchaseInput/style.js","components/common/ErrorMessageBox/style.js","components/common/ErrorMessageBox/index.js","components/PurchaseInput/index.js","components/WinningNumber/style.js","components/WinningNumber/index.js","components/Main/style.js","components/common/Timer/style.js","components/common/Timer/index.js","components/Main/service.js","components/Main/index.js","components/ResultModal/style.js","components/common/Modal/style.js","components/common/Modal/index.js","components/common/BlodText/style.js","components/common/BlodText/index.js","components/ResultModal/index.js","components/App/index.js","index.js"],"names":["GlobalStyles","Container","deepCopyJSONObject","obj","JSON","parse","stringify","createDistinctRandomIntegers","from","to","length","fullLength","Error","arr","newArr","i","j","Math","floor","random","shuffle","Array","_","slice","countMatchedNumbers","numbers1","numbers2","numbers","numbersSet","Set","size","RANKINGS","RANKING1","RANKING2","RANKING3","RANKING4","RANKING5","NO_PRIZE","PRIZE_TABLE","prize","condition","LOTTO_PRICE","LOTTO_RANGE","INITIAL_RESULT","rankCount","earningRate","LOTTERY_TIME","createLottoResult","initResult","lottos","winningNumbers","bonusNumber","result","payment","forEach","lotto","ranking","lottoNumber","winningNumber","getRanking","price","totalPrize","Object","values","reduce","acc","round","calculateEarningRate","Switch","Input","Text","Toggle","text","onToggle","htmlFor","type","id","onChange","TicketList","isNumberVisible","List","TicketIcon","Lotto","lottoNumbers","join","LottoBox","map","key","toString","Header","ERROR_MESSAGE","INVALID_PRICE_UNIT","DUPLICATED_NUMBER","GUIDE_MESSAGE","lottoCount","LottoContainer","useState","isToggled","setToggleState","event","target","checked","Form","Button","ErrorMessageBox","PurchaseInput","updateLottos","formRef","useRef","setPayment","isValidInput","setValidInputState","useEffect","dividend","divisor","isDivisible","current","reset","onSubmit","preventDefault","Number","elements","value","ref","name","placeholder","min","required","NumberContainer","InputHeader","InputBoxes","InputBox","WinningNumberInput","updateLottoResult","openModal","numbersArray","$input","index","max","MainContainer","TimeUnit","fontWeight","Timer","targetTime","Date","remainTime","setRemainTime","countdown","setInterval","setSeconds","getSeconds","clearInterval","getDate","getHours","getMinutes","getNextSaturday","now","year","getFullYear","month","getMonth","date","diff","abs","getDay","Main","state","action","WinningNumber","ResultTable","TableRow","ModalContainer","ModalInner","ModalClose","Svg","Modal","closeModal","children","modalCloseSvgRef","onMouseDown","currentTarget","viewBox","d","BoldText","ResultModal","lottoResult","clear","onClick","App","setLottos","isModalOpen","setModalState","setLottoResult","newLottos","createLottos","newLottoResult","styles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ce0c3b3.chunk.js","sourcesContent":["import { css } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\n\nexport const GlobalStyles = css`\n  * {\n    box-sizing: border-box;\n  }\n\n  html,\n  body {\n    margin: 0;\n  }\n\n  body {\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen,\n      Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\n    font-size: 16px;\n  }\n\n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n\n  ul {\n    list-style: none;\n    padding: 0;\n  }\n\n  input::-webkit-outer-spin-button,\n  input::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","export const shuffle = (arr) => {\n  const newArr = [...arr];\n\n  for (let i = newArr.length; i; i -= 1) {\n    const j = Math.floor(Math.random() * i);\n    [newArr[i - 1], newArr[j]] = [newArr[j], newArr[i - 1]];\n  }\n\n  return newArr;\n};\n\nexport const deepCopyJSONObject = (obj) => JSON.parse(JSON.stringify(obj));\n\nexport const createDistinctRandomIntegers = (from, to, length) => {\n  const fullLength = to - from + 1;\n\n  if (fullLength < length) {\n    throw new Error(\"Invalid Length\");\n  }\n\n  const baseNumbers = shuffle(\n    Array.from({ length: fullLength }, (_, i) => from + i)\n  );\n\n  return baseNumbers.slice(0, length);\n};\n\nexport const isDivisible = (dividend, divisor) => {\n  if (divisor === 0) {\n    throw new Error(\"Invalid divisor\");\n  }\n\n  return dividend % divisor === 0;\n};\n\nexport const isDistinctNumbers = (numbersArray) => {\n  const numbersSet = new Set(numbersArray);\n\n  return numbersSet.size === numbersArray.length;\n};\n\nexport const countMatchedNumbers = (numbers1, numbers2) => {\n  const numbers = [...numbers1, ...numbers2];\n  const numbersSet = new Set(numbers);\n  return numbers.length - numbersSet.size;\n};\n","export const RANKINGS = {\n  RANKING1: \"RANKING1\",\n  RANKING2: \"RANKING2\",\n  RANKING3: \"RANKING3\",\n  RANKING4: \"RANKING4\",\n  RANKING5: \"RANKING5\",\n  NO_PRIZE: \"NO_PRIZE\",\n};\n\nexport const PRIZE_TABLE = {\n  [RANKINGS.RANKING1]: {\n    prize: 2000000000,\n    condition: \"6개\",\n  },\n  [RANKINGS.RANKING2]: {\n    prize: 30000000,\n    condition: \"5개 + 보너스볼\",\n  },\n  [RANKINGS.RANKING3]: {\n    prize: 1500000,\n    condition: \"5개\",\n  },\n  [RANKINGS.RANKING4]: {\n    prize: 50000,\n    condition: \"4개\",\n  },\n  [RANKINGS.RANKING5]: {\n    prize: 5000,\n    condition: \"3개\",\n  },\n  [RANKINGS.NO_PRIZE]: {\n    prize: 0,\n    condition: \"2개 이하\",\n  },\n};\n","import { RANKINGS } from \"./prizeTable\";\n\nexport const LOTTO_PRICE = 1000;\nexport const LOTTO_RANGE = { FROM: 1, TO: 45 };\nexport const LOTTO_LENGTH = 6;\n\nexport const INITIAL_RESULT = {\n  rankCount: {\n    [RANKINGS.RANKING1]: 0,\n    [RANKINGS.RANKING2]: 0,\n    [RANKINGS.RANKING3]: 0,\n    [RANKINGS.RANKING4]: 0,\n    [RANKINGS.RANKING5]: 0,\n    [RANKINGS.NO_PRIZE]: 0,\n  },\n  earningRate: 0,\n};\n\nexport const LOTTERY_TIME = {\n  HOUR: 8,\n  MINUTES: 45,\n};\n","import {\n  LOTTO_LENGTH,\n  LOTTO_PRICE,\n  LOTTO_RANGE,\n} from \"../../@shared/constants/lotto\";\nimport { PRIZE_TABLE, RANKINGS } from \"../../@shared/constants/prizeTable\";\nimport {\n  countMatchedNumbers,\n  createDistinctRandomIntegers,\n  deepCopyJSONObject,\n} from \"../../@shared/utils/common\";\n\nexport const getRanking = (lottoNumber, winningNumber, bonusNumber) => {\n  const numOfMatched = countMatchedNumbers(lottoNumber, winningNumber);\n\n  switch (numOfMatched) {\n    case 3:\n      return RANKINGS.RANKING5;\n    case 4:\n      return RANKINGS.RANKING4;\n    case 5:\n      if (countMatchedNumbers(lottoNumber, [bonusNumber])) {\n        return RANKINGS.RANKING2;\n      }\n      return RANKINGS.RANKING3;\n    case 6:\n      return RANKINGS.RANKING1;\n    default:\n      return RANKINGS.NO_PRIZE;\n  }\n};\n\nexport const calculateEarningRate = (rankCount, price) => {\n  const totalPrize = Object.values(RANKINGS).reduce((acc, ranking) => {\n    return acc + rankCount[ranking] * PRIZE_TABLE[ranking].prize;\n  }, 0);\n\n  return Math.round(((totalPrize - price) / price) * 100);\n};\n\nexport const createLottoResult = (\n  initResult,\n  lottos,\n  winningNumbers,\n  bonusNumber\n) => {\n  const result = deepCopyJSONObject(initResult);\n  const payment = lottos.length * LOTTO_PRICE;\n  lottos.forEach((lotto) => {\n    const ranking = getRanking(lotto, winningNumbers, bonusNumber);\n    result.rankCount[ranking] += 1;\n  });\n  result.earningRate = calculateEarningRate(result.rankCount, payment);\n\n  return result;\n};\n\nexport const createLottos = (lottoCount) => {\n  const lottos = Array.from({ length: lottoCount }, () =>\n    createDistinctRandomIntegers(LOTTO_RANGE.FROM, LOTTO_RANGE.TO, LOTTO_LENGTH)\n  );\n  return lottos;\n};\n","import styled from \"@emotion/styled\";\n\nexport const Switch = styled.label`\n  z-index: 0;\n  position: relative;\n\n  & > input:checked + span::before {\n    background-color: rgba(0, 188, 212, 0.6);\n  }\n\n  & > input:checked + span::after {\n    background-color: rgb(0, 188, 212);\n    transform: translateX(16px);\n  }\n\n  &:hover > input {\n    opacity: 0.04;\n  }\n\n  &:hover > input:focus {\n    opacity: 0.16;\n  }\n\n  & > input:active + span::before {\n    background-color: rgba(0, 188, 212, 0.6);\n  }\n\n  & > input:checked:active + span::before {\n    background-color: rgba(0, 0, 0, 0.38);\n  }\n\n  & > input:disabled + span {\n    color: black;\n    opacity: 0.38;\n    cursor: default;\n  }\n\n  & > input:disabled + span::before {\n    background-color: rgba(0, 0, 0, 0.38);\n  }\n\n  & > input:checked:disabled + span::before {\n    background-color: rgba(0, 188, 212, 0.6);\n  }\n`;\n\nexport const Input = styled.input`\n  appearance: none;\n  -moz-appearance: none;\n  -webkit-appearance: none;\n  z-index: -1;\n  position: absolute;\n  right: 6px;\n  top: -8px;\n  display: block;\n  margin: 0;\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  outline: none;\n  opacity: 0;\n  transform: scale(1);\n  pointer-events: none;\n  transition: opacity 0.3s 0.1s, transform 0.2s 0.1s;\n\n  &:focus {\n    opacity: 0.12;\n  }\n  &:disabled {\n    opacity: 0;\n  }\n  &:checked {\n    right: -10px;\n    background-color: rgb(0, 188, 212);\n  }\n  &:active {\n    opacity: 1;\n    transform: scale(0);\n    transition: transform 0s, opacity 0s;\n  }\n`;\n\nexport const Text = styled.span`\n  display: inline-block;\n  width: 100%;\n  cursor: pointer;\n  line-height: 1.7;\n  font-size: 14px;\n\n  &::before {\n    content: \"\";\n    float: right;\n    display: inline-block;\n    margin: 5px 0 5px 10px;\n    border-radius: 7px;\n    width: 36px;\n    height: 14px;\n    background-color: rgba(0, 0, 0, 0.38);\n    vertical-align: top;\n    transition: background-color 0.2s, opacity 0.2s;\n  }\n\n  &::after {\n    content: \"\";\n    position: absolute;\n    top: 2px;\n    right: 16px;\n    border-radius: 50%;\n    width: 20px;\n    height: 20px;\n    background-color: white;\n    box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2),\n      0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n    transition: background-color 0.2s, transform 0.2s;\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Input, Switch, Text } from \"./style\";\n\nconst Toggle = ({ text, onToggle }) => {\n  return (\n    <Switch htmlFor=\"lotto-numbers-toggle\">\n      <Input type=\"checkbox\" id=\"lotto-numbers-toggle\" onChange={onToggle} />\n      <Text>{text}</Text>\n    </Switch>\n  );\n};\n\nToggle.propTypes = {\n  text: PropTypes.string.isRequired,\n  onToggle: PropTypes.func.isRequired,\n};\n\nexport default Toggle;\n","import styled from \"@emotion/styled\";\n\n// eslint-disable-next-line import/prefer-default-export\nexport const TicketList = styled.ul`\n  ${({ isNumberVisible }) =>\n    !isNumberVisible ? \"display: flex; flex-wrap: wrap;\" : \"\"}\n`;\n","import styled from \"@emotion/styled\";\n\nexport const List = styled.li`\n  display: flex;\n  align-items: center;\n`;\n\nexport const TicketIcon = styled.span`\n  margin-right: 10px;\n  font-size: 24px;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { List, TicketIcon } from \"./style\";\n\nconst Lotto = ({ isNumberVisible, lottoNumbers }) => {\n  return (\n    <List>\n      <TicketIcon>🎟️</TicketIcon>\n      {isNumberVisible && <span>{lottoNumbers.join(\", \")}</span>}\n    </List>\n  );\n};\n\nLotto.propTypes = {\n  isNumberVisible: PropTypes.bool.isRequired,\n  lottoNumbers: PropTypes.arrayOf(PropTypes.number).isRequired,\n};\n\nexport default Lotto;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { TicketList } from \"./style\";\nimport Lotto from \"../Lotto\";\n\nconst LottoBox = ({ isNumberVisible, lottos }) => {\n  return (\n    <TicketList isNumberVisible={isNumberVisible}>\n      {lottos.map((lottoNumbers) => (\n        <Lotto\n          key={lottoNumbers.toString()}\n          lottoNumbers={lottoNumbers}\n          isNumberVisible={isNumberVisible}\n        />\n      ))}\n    </TicketList>\n  );\n};\n\nLottoBox.propTypes = {\n  isNumberVisible: PropTypes.bool.isRequired,\n  lottos: PropTypes.oneOfType([PropTypes.array]).isRequired,\n};\n\nexport default LottoBox;\n","import styled from \"@emotion/styled\";\n\n// eslint-disable-next-line import/prefer-default-export\nexport const Header = styled.h2`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 20px;\n  font-size: 16px;\n  font-weight: normal;\n  align-items: center;\n`;\n","import { LOTTO_PRICE } from \"./lotto\";\n\nexport const ERROR_MESSAGE = {\n  INVALID_PRICE_UNIT: `${LOTTO_PRICE}원 단위로 입력해주세요.`,\n  DUPLICATED_NUMBER: \"서로 다른 숫자를 입력해주세요.\",\n};\n\nexport const GUIDE_MESSAGE = {\n  PURCHASE_INPUT: \"구입할 금액을 입력해주세요.\",\n  WINNING_NUMBER: \"지난 주 당첨번호 6개와 보너스 넘버 1개를 입력해주세요.\",\n  LOTTO_COUNT: (lottoCount) => `총 ${lottoCount}개를 구매하였습니다.`,\n  EARNING_RATE: (earningRate) => `당신의 수익률은 총 ${earningRate}% 입니다.`,\n};\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Toggle from \"../common/Toggle\";\nimport LottoBox from \"../LottoBox\";\nimport { Header } from \"./style\";\nimport { GUIDE_MESSAGE } from \"../../@shared/constants/messages\";\n\nconst LottoContainer = ({ lottos }) => {\n  const [isToggled, setToggleState] = useState(false);\n\n  const onToggle = (event) => {\n    setToggleState(event.target.checked);\n  };\n\n  return (\n    <div>\n      <Header>\n        <span>{GUIDE_MESSAGE.LOTTO_COUNT(lottos.length)}</span>\n        <Toggle text=\"번호 보기\" onToggle={onToggle} />\n      </Header>\n      <LottoBox isNumberVisible={isToggled} lottos={lottos} />\n    </div>\n  );\n};\n\nLottoContainer.propTypes = {\n  lottos: PropTypes.oneOfType([PropTypes.array]).isRequired,\n};\n\nexport default LottoContainer;\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  display: flex;\n  margin-top: 0.5rem;\n`;\n\nexport const Form = styled.form`\n  width: 100%;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 10px;\n`;\n\nexport const Button = styled.button`\n  width: 80px;\n  margin-left: 5px;\n  padding: 10px 0;\n  background-color: #00bcd4;\n  border: none;\n  border-radius: 5px;\n  outline: none;\n  cursor: pointer;\n  &:hover {\n    background-color: #018c9e;\n  }\n`;\n","import styled from \"@emotion/styled\";\n\n// eslint-disable-next-line import/prefer-default-export\nexport const Text = styled.p`\n  color: red;\n  text-align: center;\n  margin-bottom: 0;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Text } from \"./style\";\n\nconst ErrorMessageBox = ({ text }) => {\n  return <Text>{text}</Text>;\n};\n\nErrorMessageBox.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default ErrorMessageBox;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { LOTTO_PRICE } from \"../../@shared/constants/lotto\";\nimport { ERROR_MESSAGE, GUIDE_MESSAGE } from \"../../@shared/constants/messages\";\nimport { isDivisible } from \"../../@shared/utils/common\";\nimport { Button, Container, Form, Input } from \"./style\";\nimport ErrorMessageBox from \"../common/ErrorMessageBox\";\n\nconst PurchaseInput = ({ updateLottos }) => {\n  const formRef = useRef();\n  const [payment, setPayment] = useState(0);\n  const [isValidInput, setValidInputState] = useState(true);\n\n  useEffect(() => {\n    if (isDivisible(payment, LOTTO_PRICE)) {\n      updateLottos(payment / LOTTO_PRICE);\n      setValidInputState(true);\n      formRef.current.reset();\n    } else {\n      setValidInputState(false);\n      updateLottos(0);\n    }\n  }, [payment]);\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n\n    setPayment(Number(event.target.elements[\"purchase-input\"].value));\n  };\n\n  return (\n    <Form onSubmit={onSubmit} ref={formRef}>\n      <label htmlFor=\"purchase-input\">{GUIDE_MESSAGE.PURCHASE_INPUT}</label>\n      <Container>\n        <Input\n          id=\"purchase-input\"\n          name=\"purchase-input\"\n          type=\"number\"\n          placeholder=\"구입 금액\"\n          min={LOTTO_PRICE}\n          required\n        />\n        <Button type=\"submit\">확인</Button>\n      </Container>\n      {!isValidInput && (\n        <ErrorMessageBox text={ERROR_MESSAGE.INVALID_PRICE_UNIT} />\n      )}\n    </Form>\n  );\n};\n\nPurchaseInput.propTypes = {\n  updateLottos: PropTypes.func.isRequired,\n};\n\nexport default PurchaseInput;\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Header = styled.h2`\n  font-size: 16px;\n  font-weight: normal;\n`;\n\nexport const NumberContainer = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport const InputHeader = styled.h3`\n  text-align: center;\n`;\n\nexport const InputBoxes = styled.div`\n  display: flex;\n`;\n\nexport const InputBox = styled.input`\n  width: 40px;\n  height: 36px;\n  &:not(:last-child) {\n    margin-right: 7px;\n  }\n  text-align: center;\n`;\n\nexport const Button = styled.button`\n  width: 100%;\n  margin-top: 30px;\n  padding: 10px 0;\n  background-color: #00bcd4;\n  border: none;\n  border-radius: 5px;\n  outline: none;\n  cursor: pointer;\n  &:hover {\n    background-color: #018c9e;\n  }\n`;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { ERROR_MESSAGE, GUIDE_MESSAGE } from \"../../@shared/constants/messages\";\nimport { isDistinctNumbers } from \"../../@shared/utils/common\";\nimport ErrorMessageBox from \"../common/ErrorMessageBox\";\nimport {\n  Button,\n  Container,\n  Header,\n  InputBox,\n  InputBoxes,\n  InputHeader,\n  NumberContainer,\n} from \"./style\";\n\nconst WinningNumberInput = ({ updateLottoResult, openModal }) => {\n  const [isValidInput, setValidInputState] = useState(true);\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n\n    const { elements } = event.target;\n    const winningNumbers = Array.from(elements[\"winning-number\"], ($input) =>\n      Number($input.value)\n    );\n    const bonusNumber = Number(elements[\"bonus-number\"].value);\n\n    if (isDistinctNumbers([...winningNumbers, bonusNumber])) {\n      setValidInputState(true);\n      updateLottoResult(winningNumbers, bonusNumber);\n      openModal();\n    } else {\n      setValidInputState(false);\n    }\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <Header>{GUIDE_MESSAGE.WINNING_NUMBER}</Header>\n      <Container>\n        <NumberContainer>\n          <InputHeader>당첨 번호</InputHeader>\n          <InputBoxes>\n            {Array.from({ length: 6 }, (_, index) => (\n              <InputBox\n                key={index}\n                name=\"winning-number\"\n                type=\"number\"\n                min=\"1\"\n                max=\"45\"\n                required=\"required\"\n              />\n            ))}\n          </InputBoxes>\n        </NumberContainer>\n\n        <NumberContainer>\n          <InputHeader>보너스 번호</InputHeader>\n          <InputBox\n            name=\"bonus-number\"\n            type=\"number\"\n            min=\"1\"\n            max=\"45\"\n            required=\"required\"\n          />\n        </NumberContainer>\n      </Container>\n      {!isValidInput && (\n        <ErrorMessageBox text={ERROR_MESSAGE.DUPLICATED_NUMBER} />\n      )}\n      <Button type=\"submit\">확인</Button>\n    </form>\n  );\n};\n\nWinningNumberInput.propTypes = {\n  updateLottoResult: PropTypes.func.isRequired,\n  openModal: PropTypes.func.isRequired,\n};\n\nexport default WinningNumberInput;\n","import styled from \"@emotion/styled\";\n\n// eslint-disable-next-line import/prefer-default-export\nexport const MainContainer = styled.main`\n  width: 23vw;\n  min-width: 400px;\n`;\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  margin-top: 20px;\n  display: flex;\n  justify-content: center;\n`;\n\nexport const TimeUnit = styled.span`\n  ${({ fontWeight }) => fontWeight && `font-weight: ${fontWeight};`}\n`;\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container, TimeUnit } from \"./style\";\n\nfunction Timer({ targetTime }) {\n  const [remainTime, setRemainTime] = useState(\n    new Date(targetTime - new Date())\n  );\n\n  useEffect(() => {\n    const countdown = setInterval(() => {\n      if (remainTime > 0) {\n        remainTime.setSeconds(remainTime.getSeconds() - 1);\n        setRemainTime(new Date(remainTime));\n      } else {\n        clearInterval(countdown);\n      }\n    }, 1000);\n    return () => clearInterval(countdown);\n  }, [remainTime]);\n\n  return (\n    <Container>\n      <TimeUnit fontWeight=\"900\">남은 시간: &nbsp;</TimeUnit>\n      <TimeUnit>{remainTime.getDate()} 일&nbsp;</TimeUnit>\n      <TimeUnit>{remainTime.getHours()}시&nbsp;</TimeUnit>\n      <TimeUnit>{remainTime.getMinutes()}분&nbsp;</TimeUnit>\n      <TimeUnit>{remainTime.getSeconds()}초</TimeUnit>\n    </Container>\n  );\n}\n\nTimer.propTypes = {\n  targetTime: PropTypes.instanceOf(Date).isRequired,\n};\n\nexport default Timer;\n","import { LOTTERY_TIME } from \"../../@shared/constants/lotto\";\n\n// eslint-disable-next-line import/prefer-default-export\nexport const getNextSaturday = () => {\n  const now = new Date();\n  const year = now.getFullYear();\n  const month = now.getMonth();\n  const date = now.getDate();\n  const diff = Math.abs(6 - now.getDay());\n  const nextSaturday = new Date(\n    year,\n    month,\n    date + diff,\n    LOTTERY_TIME.HOUR,\n    LOTTERY_TIME.MINUTES\n  );\n\n  return nextSaturday;\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport LottoContainer from \"../LottoContainer\";\nimport PurchaseInput from \"../PurchaseInput\";\nimport WinningNumberInput from \"../WinningNumber\";\nimport { MainContainer } from \"./style\";\nimport Timer from \"../common/Timer\";\nimport { getNextSaturday } from \"./service\";\n\nconst Main = ({\n  state: { lottos },\n  action: { updateLottos, updateLottoResult, openModal },\n}) => {\n  return (\n    <MainContainer>\n      <PurchaseInput updateLottos={updateLottos} />\n      {lottos.length !== 0 && <Timer targetTime={getNextSaturday()} />}\n      {lottos.length !== 0 && <LottoContainer lottos={lottos} />}\n      {lottos.length !== 0 && (\n        <WinningNumberInput\n          updateLottoResult={updateLottoResult}\n          openModal={openModal}\n        />\n      )}\n    </MainContainer>\n  );\n};\n\nMain.propTypes = {\n  state: PropTypes.oneOfType([PropTypes.object]).isRequired,\n  action: PropTypes.oneOfType([PropTypes.object]).isRequired,\n};\n\nexport default Main;\n","import styled from \"@emotion/styled\";\n\nexport const ResultTable = styled.table`\n  border-collapse: collapse;\n  width: 100%;\n\n  & td,\n  & th {\n    border-bottom: 1px solid gainsboro;\n    padding: 10px 0;\n  }\n`;\n\nexport const Button = styled.button`\n  width: 120px;\n  padding: 10px 0;\n  background-color: #00bcd4;\n  border: none;\n  border-radius: 5px;\n  outline: none;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #018c9e;\n  }\n`;\n\nexport const TableRow = styled.tr`\n  text-align: center;\n`;\n","import styled from \"@emotion/styled\";\n\nexport const ModalContainer = styled.div`\n  opacity: 1;\n  display: flex;\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background: rgba(0, 0, 0, 0.5);\n  transition: opacity 0.25s ease;\n  z-index: 2;\n`;\n\nexport const ModalInner = styled.div`\n  transition: top 0.25s ease;\n  width: 70vw;\n  max-width: 400px;\n  margin: auto;\n  padding: 30px 50px;\n  overflow: auto;\n  background: #fff;\n  border-radius: 5px;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const ModalClose = styled.div`\n  margin: 20px;\n  width: 20px;\n  position: absolute;\n  right: 10px;\n  top: 10px;\n  cursor: pointer;\n`;\n\nexport const Svg = styled.svg`\n  display: inline-block;\n  margin: 0;\n  padding: 0;\n  & path {\n    stroke: gray;\n    fill: transparent;\n    stroke-linecap: round;\n    stroke-width: 5;\n  }\n`;\n","import React, { useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ModalClose, ModalContainer, ModalInner, Svg } from \"./style\";\n\nconst Modal = ({ closeModal, children }) => {\n  const modalCloseSvgRef = useRef();\n  const onMouseDown = (event) => {\n    if (\n      event.currentTarget === event.target ||\n      event.target === modalCloseSvgRef.current\n    ) {\n      closeModal();\n    }\n  };\n\n  return (\n    <ModalContainer onMouseDown={onMouseDown}>\n      <ModalInner>\n        <ModalClose>\n          <Svg viewBox=\"0 0 40 40\" ref={modalCloseSvgRef}>\n            <path d=\"M 10,10 L 30,30 M 30,10 L 10,30\" />\n          </Svg>\n        </ModalClose>\n        {children}\n      </ModalInner>\n    </ModalContainer>\n  );\n};\n\nModal.propTypes = {\n  closeModal: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Modal;\n","import styled from \"@emotion/styled\";\n\n// eslint-disable-next-line import/prefer-default-export\nexport const Text = styled.p`\n  font-weight: bold;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Text } from \"./style\";\n\nconst BoldText = ({ text }) => {\n  return <Text>{text}</Text>;\n};\n\nBoldText.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default BoldText;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { GUIDE_MESSAGE } from \"../../@shared/constants/messages\";\nimport { PRIZE_TABLE, RANKINGS } from \"../../@shared/constants/prizeTable\";\nimport { Button, ResultTable, TableRow } from \"./style\";\nimport Modal from \"../common/Modal\";\nimport BoldText from \"../common/BlodText\";\n\nconst ResultModal = ({\n  state: {\n    lottoResult: { rankCount, earningRate },\n  },\n  action: { clear, closeModal },\n}) => {\n  return (\n    <Modal closeModal={closeModal}>\n      <h2>🏆 당첨 통계 🏆</h2>\n      <ResultTable>\n        <thead>\n          <TableRow>\n            <th>일치 갯수</th>\n            <th>당첨금</th>\n            <th>당첨 갯수</th>\n          </TableRow>\n        </thead>\n        <tbody>\n          {Object.values(RANKINGS).map((ranking) => (\n            <TableRow key={`${ranking}-ranking`}>\n              <td>{PRIZE_TABLE[ranking].condition}</td>\n              <td>{PRIZE_TABLE[ranking].prize}원</td>\n              <td>{rankCount[ranking]}개</td>\n            </TableRow>\n          ))}\n        </tbody>\n      </ResultTable>\n      <BoldText text={GUIDE_MESSAGE.EARNING_RATE(earningRate)} />\n      <Button type=\"button\" onClick={clear}>\n        다시 시작하기\n      </Button>\n    </Modal>\n  );\n};\n\nResultModal.propTypes = {\n  state: PropTypes.oneOfType([PropTypes.object]).isRequired,\n  action: PropTypes.oneOfType([PropTypes.object]).isRequired,\n};\n\nexport default ResultModal;\n","import React, { useState } from \"react\";\nimport { Global } from \"@emotion/react\";\n\nimport { Container, GlobalStyles } from \"./style\";\nimport { deepCopyJSONObject } from \"../../@shared/utils/common\";\nimport { INITIAL_RESULT } from \"../../@shared/constants/lotto\";\n\nimport { createLottoResult, createLottos } from \"./service\";\nimport Main from \"../Main\";\nimport ResultModal from \"../ResultModal\";\n\nconst App = () => {\n  const [lottos, setLottos] = useState([]);\n  const [isModalOpen, setModalState] = useState(false);\n  const [lottoResult, setLottoResult] = useState(\n    deepCopyJSONObject(INITIAL_RESULT)\n  );\n\n  const state = {\n    lottos,\n    isModalOpen,\n    lottoResult,\n  };\n\n  const action = {\n    updateLottos: (lottoCount) => {\n      const newLottos = createLottos(lottoCount);\n\n      setLottos(newLottos);\n    },\n\n    updateLottoResult: (winningNumbers, bonusNumber) => {\n      const newLottoResult = createLottoResult(\n        INITIAL_RESULT,\n        lottos,\n        winningNumbers,\n        bonusNumber\n      );\n\n      setLottoResult(newLottoResult);\n    },\n\n    openModal: () => {\n      setModalState(true);\n    },\n\n    closeModal: () => {\n      setModalState(false);\n    },\n\n    clear: () => {\n      setLottos([]);\n      setModalState(false);\n      setLottoResult(deepCopyJSONObject(INITIAL_RESULT));\n    },\n  };\n\n  return (\n    <>\n      <Global styles={GlobalStyles} />\n      <Container>\n        <h1>🎱 행운의 로또</h1>\n        <Main state={state} action={action} />\n        {state.isModalOpen && <ResultModal state={state} action={action} />}\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}